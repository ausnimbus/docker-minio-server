#!/bin/bash
#
# The 'run' performs a simple test that verifies that STI image.
IMAGE_NAME=quay.io/ausnimbus/minio-container

# TODO: This should be part of the image metadata
test_port=9000

# Install docker-squash
pip install docker-squash

# Docker login
docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" quay.io

info() {
  echo -e "\n\e[1m[INFO] $@...\e[0m\n"
}

image_exists() {
  docker inspect $1 &>/dev/null
}

container_exists() {
  image_exists $(cat $cid_file)
}

container_ip() {
  docker inspect --format="{{ .NetworkSettings.IPAddress }}" $(cat $cid_file)
}

test_docker_build() {
	echo "Testing the 'docker build'..."
	docker build -t $IMAGE_NAME .
}

run_test_application() {
  docker run --user=100001 --cidfile=${cid_file} -p ${test_port} ${IMAGE_NAME}
}

cleanup_test_app() {
  info "Cleaning up the test application"
  if [ -f $cid_file ]; then
    if container_exists; then
      docker stop $(cat $cid_file)
      docker rm $(cat $cid_file)
    fi
    rm $cid_file
  fi
}

wait_for_cid() {
  local max_attempts=10
  local sleep_time=1
  local attempt=1
  local result=1
  info "Waiting for application container to start"
  while [ $attempt -le $max_attempts ]; do
    [ -f $cid_file ] && [ -s $cid_file ] && break
    attempt=$(( $attempt + 1 ))
    sleep $sleep_time
  done
}

test_connection() {
  info "Testing the HTTP connection (http://$(container_ip):${test_port})"
  local max_attempts=10
  local sleep_time=1
  local attempt=1
  local result=1
  while [ $attempt -le $max_attempts ]; do
    response_code=$(curl -s -w %{http_code} -o /dev/null http://$(container_ip):${test_port}/minio/login)
    status=$?
    if [ $status -eq 0 ]; then
      result=0
      break
    fi
    attempt=$(( $attempt + 1 ))
    sleep $sleep_time
  done
  return $result
}

check_result() {
	local result="$1"
	if [[ "$result" != "0" ]]; then
		echo "Image '${IMAGE_NAME}' test FAILED (exit code: ${result})"
		exit $result
	fi
}

test_application() {
  # Verify that the HTTP connection can be established to test application container
  run_test_application &

  # Wait for the container to write it's CID file
  wait_for_cid

  test_connection
  check_result $?
  cleanup_test_app
}

cid_file=$(mktemp -u --suffix=.cid)

test_docker_build
check_result $?

# Test application with default uid
test_application

docker-squash -t ${IMAGE_NAME} ${IMAGE_NAME}
docker push ${IMAGE_NAME}
